overview: Basic tests for template language features.
tests:
  - name: bi-component
    template: >
      <div bi-component="foo">Hello {name}!</div><foo name="{foo}" />
    expected: <div>Hello Bar!</div>
    data: {foo: 'Bar', name: 'Baz', child: {name: 'Frank'}}
    tests:
      - name: default bi-with
        template: <div bi-component="foo">Hello {name}!</div><foo />
        expected: <div>Hello Baz!</div>
      - name: bi-with
        template: <div bi-component="foo">Hello {name}!</div><foo bi-with="child" />
        expected: <div>Hello Frank!</div>
      - name: overridden bi-with
        template: >
          <div bi-component="foo">Hello {name}{punc ?: "!"}</div><foo bi-with="child" punc="?" />
        expected: <div>Hello Frank?</div>
      - name: bi-include
        template: >
          <div bi-component="bar">Hello {name}!</div><x bi-include="foo" name="{foo}" />
  - name: bi-children
    template: >
      <div bi-component="page"><h1 bi-children/></div><page>Hello {name}!</page>
    data: {name: 'Sam'}
    expected: <div><h1>Hello Sam!</h1></div>
    tests:
      - name: named child
        template: >
          <page><x bi-block="greet">Hello {name}!</x></page><div bi-component="page"><h1 bi-children="greet" /></div>
  - name: bi-children nested
    data: [{name: 'Frank'}, {name: 'Joe'}]
    template: >-
      <li bi-component="row" id="{id}"><x bi-children /></li><ul bi-each="this" bi-as="i j"><row id="{i}">{j.name}</row></ul>
    expected: >-
      <ul><li id="0">Frank</li><li id="1">Joe</li></ul>
