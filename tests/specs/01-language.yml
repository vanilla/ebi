overview: Basic tests for template language features.
tests:
  - name: bi-if
    template: >
      <p bi-if="empty(items)">empty</p>
    tests:
      - name: no data
        expected: '<p>empty</p>'
        tests:
          - data: { }
          - data: { items: [] }
          - data: { items: false }
      - name: has data
        expected: ''
        data: { items: [1] }
  - name: bi-if else
    template: |
      <div bi-if="signedIn">Welcome!</div>
      <div bi-else>Sign in to participate.</div>
    tests:
      - name: 'true'
        data: { signedIn: true }
        expected: '<div>Welcome!</div>'
      - name: 'false'
        data: { signedIn: false }
        expected: '<div>Sign in to participate.</div>'
  - name: bi-each
    template: |
      <ul bi-each="people">
        <li>Hi {name}!</li>
      </ul>
    tests:
      - name: no data
        data: { }
        expected: '<ul></ul>'
      - name: array
        data:
          people:
            - { name: you }
            - { name: us }
        expected: '<ul><li>Hi you!</li><li>Hi us!</li></ul>'
  - name: bi-each bi-as
    data:
      name: 'How'
      comments:
        - { body: 'do I?' }
        - { body: 'do you?' }
    tests:
      - name: item
        template: |
          <ul bi-each="comments" bi-as="comment">
            <li>{name}: {comment.body}</li>
          </ul>
        expected: '<ul><li>How: do I?</li><li>How: do you?</li></ul>'
      - name: bi-with index
        template: |
          <ul bi-each="comments" bi-as="i comment">
            <li>{i} {name}: {comment.body}</li>
          </ul>
        expected: '<ul><li>0 How: do I?</li><li>1 How: do you?</li></ul>'
  - name: bi-each bi-empty
    template: |
      <ul bi-each="this">
        <li>{b}</li>
        <li bi-empty>empty</li>
      </ul>
    tests:
      - name: bi-with data
        data: [ 'a' ]
        expected: '<ul><li>a</li></ul>'
      - name: no data
        data: []
        expected: '<ul><li>empty</li></ul>'
  - name: bi-with
    template: '<div bi-with="user">Hi {name}</div>'
    data: { name: parent, user: { name: child } }
    expected: '<div>Hi child</div>'
  - name: bi-literal
    template: '<code bi-literal>Hello <b bi-literal>{username}</b> a > b</code>'
    data: []
    expected: '<code>Hello <b bi-literal>{username}</b> a &gt; b</code>'
  - name: bi-x
    template: '<bi-x bi-if="signedIn">Welcome back</bi-x>'
    data: {signedIn: true}
    expected: 'Welcome back'
