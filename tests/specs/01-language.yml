overview: Basic tests for template language features.
tests:
  - name: x-if
    template: >
      <p x-if="empty(items)">empty</p>
    tests:
      - name: no data
        expected: '<p>empty</p>'
        tests:
          - data: { }
          - data: { items: [] }
          - data: { items: false }
      - name: has data
        expected: ''
        data: { items: [1] }
  - name: x-if else
    template: |
      <div x-if="signedIn">Welcome!</div>
      <div x-else>Sign in to participate.</div>
    tests:
      - name: 'true'
        data: { signedIn: true }
        expected: '<div>Welcome!</div>'
      - name: 'false'
        data: { signedIn: false }
        expected: '<div>Sign in to participate.</div>'
  - name: x-each
    template: |
      <ul x-each="people"><li>Hi {name}!</li></ul>
    tests:
      - name: no data
        data: { }
        expected: '<ul></ul>'
      - name: array
        data:
          people:
            - { name: you }
            - { name: us }
        expected: '<ul><li>Hi you!</li><li>Hi us!</li></ul>'
  - name: x-each x-as
    data:
      name: 'How'
      comments:
        - { body: 'do I?' }
        - { body: 'do you?' }
    tests:
      - name: item
        template: |
          <ul x-each="comments" x-as="comment"><li>{name}: {comment.body}</li></ul>
        expected: '<ul><li>How: do I?</li><li>How: do you?</li></ul>'
      - name: with index
        template: |
          <ul x-each="comments" x-as="i comment"><li>{i} {name}: {comment.body}</li></ul>
        expected: '<ul><li>0 How: do I?</li><li>1 How: do you?</li></ul>'
      - name: 'with index & this'
        template: |
          <ul x-each="comments" x-as="i this"><li>{i}: {body}</li></ul>
        expected: '<ul><li>0: do I?</li><li>1: do you?</li></ul>'
  - name: x-each x-empty
    template: >
      <ul x-each="this"><li>{b}</li><li x-empty>empty</li></ul>
    tests:
      - name: with data
        data: [ 'a' ]
        expected: '<ul><li>a</li></ul>'
      - name: no data
        data: []
        expected: '<ul><li>empty</li></ul>'
  - name: x-with
    template: '<div x-with="user">Hi {name}</div>'
    data: { name: parent, user: { name: child } }
    expected: '<div>Hi child</div>'
    tests:
      - name: x-as
        template: '<div x-with="user" x-as="u">{title} {u.name}</div>'
        data: { title: Mr, user: { name: Frank } }
        expected: '<div>Mr Frank</div>'
  - name: x-literal
    template: '<code x-literal>Hello <b x-literal>{username}</b> a > b</code>'
    data: []
    expected: '<code>Hello <b x-literal>{username}</b> a &gt; b</code>'
  - name: x
    template: '<x x-if="signedIn">Welcome back</x>'
    data: {signedIn: true}
    expected: 'Welcome back'
    tests:
      - name: x-literal
        template: '<x x-literal>Hello <b x-literal>{username}</b> a > b</x>'
        expected: 'Hello <b x-literal>{username}</b> a &gt; b'
  - name: script
    template: '<script type="ebi">join(">", [1, 2, 3])</script>'
    expected: '1&gt;2&gt;3'
    tests:
      - name: x-unescaped
        template: '<script x-unescape>join(">", [1, 2, 3])</script>'
        expected: '1>2>3'
      - name: x-as
        template: '<script x-as="foo">[1, 2, 3]</script>{join(">", foo)}'
  - name: x-tag
    template: >-
      <div class="outer" x-tag="outer"><div class="inner" x-tag="inner">foo</div></div>
    tests:
      - name: outer
        data: { outer: true }
        expected: >-
          <div class="outer">foo</div>
      - name: inner
        data: { inner: true }
        expected: >-
          <div class="inner">foo</div>
      - name: both
        data: { outer: true, inner: true }
        expected: >-
          <div class="outer"><div class="inner">foo</div></div>
      - name: rename tag
        data: { outer: "p" }
        expected: >-
          <p class="outer">foo</p>
